version: "3"
services:
  mysql:
    image: mysql:5.7
    restart: on-failure
    ports:
      - 3307:3306
    volumes:
      - microservice-mysql:/var/lib/mysql
    networks:
      - microservice-net
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: microservice_mallmanagement
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement: #服务实例在指定节点上运行
        constraints: [node.role == manager]

  eureka-server:
    image: 192.168.0.67/microservice-eureka-server:0.0.1-SNAPSHOT
    restart: on-failure
    ports:
      - 8761:8761
    networks:
      - microservice-net
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  gateway-zuul:
    image: 192.168.0.67/microservice-gateway-zuul:0.0.1-SNAPSHOT
    restart: on-failure
    ports:
      - 8050:8050
    networks:
      - microservice-net
    depends_on:
      - eureka-server
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]

  order-service:
    image: 192.168.0.67/microservice-orderservice:0.0.1-SNAPSHOT
    restart: on-failure
    ports:
      - 7900:7900
    networks:
      - microservice-net
    depends_on:
      - mysql
      - eureka-server
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  user-service:
    image: 192.168.0.67/microservice-userservice:0.0.1-SNAPSHOT
    restart: on-failure
    ports:
      - 8030:8030
    networks:
      - microservice-net
    depends_on:
      - mysql
      - eureka-server
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - 8081:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - microservice-net


networks:
  microservice-net:
volumes:
  microservice-mysql:
