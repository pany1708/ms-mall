<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.daocloud</groupId>
		<artifactId>ms-mall</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>microservice-userservice</artifactId>
	<properties>
		<!--  配置镜像前缀（就是仓库服务地址） -->
		<docker.image.prefix>192.168.0.107</docker.image.prefix>
	</properties>

	<dependencies>
		<!-- MyBatis启动器 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- MySQL驱动 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.11</version>
		</dependency>
		<!-- eureka客户端启动器 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		<!-- Use Swagger UI for REST API test -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<!--<build>-->
		<!--<plugins>-->
			<!--<plugin>-->
				<!--<groupId>org.springframework.boot</groupId>-->
				<!--<artifactId>spring-boot-maven-plugin</artifactId>-->
			<!--</plugin>-->
			<!--&lt;!&ndash; Docker maven plugin &ndash;&gt;-->
			<!--<plugin>-->
				<!--<groupId>com.spotify</groupId>-->
				<!--<artifactId>docker-maven-plugin</artifactId>-->
				<!--<version>1.0.0</version>-->
				<!--<configuration>-->
					<!--<imageName>${docker.image.prefix}/${project.artifactId}</imageName>-->
					<!--<dockerDirectory>.</dockerDirectory>-->
					<!--<resources>-->
						<!--<resource>-->
							<!--<targetPath>/</targetPath>-->
							<!--<directory>${project.build.directory}</directory>-->
							<!--<include>${project.build.finalName}.jar</include>-->
						<!--</resource>-->
					<!--</resources>-->
				<!--</configuration>-->
			<!--</plugin>-->
			<!--&lt;!&ndash; Docker maven plugin &ndash;&gt;-->
			<!--<plugin>-->
				<!--<groupId>com.spotify</groupId>-->
				<!--<artifactId>docker-maven-plugin</artifactId>-->
				<!--<version>1.0.0</version>-->

				<!--&lt;!&ndash;将插件绑定在某个phase执行&ndash;&gt;-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>build-image</id>-->
						<!--&lt;!&ndash;将插件绑定在package这个phase上。也就是说，用户只需执行mvn package ，就会自动执行mvn docker:build&ndash;&gt;-->
						<!--<phase>package</phase>-->
						<!--<goals>-->
							<!--<goal>build</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->

				<!--<configuration>-->
					<!--&lt;!&ndash;指定生成的镜像名&ndash;&gt;-->
					<!--<imageName>daocloud/${project.artifactId}</imageName>-->
					<!--&lt;!&ndash;指定标签&ndash;&gt;-->
					<!--<imageTags>-->
						<!--<imageTag>latest</imageTag>-->
					<!--</imageTags>-->
					<!--&lt;!&ndash; 指定 Dockerfile 路径&ndash;&gt;-->
					<!--<dockerDirectory>.</dockerDirectory>-->

					<!--&lt;!&ndash;指定远程 docker api地址&ndash;&gt;-->
					<!--<dockerHost>http://192.168.0.107</dockerHost>-->

					<!--&lt;!&ndash; 这里是复制 jar 包到 docker 容器指定目录配置 &ndash;&gt;-->
					<!--<resources>-->
						<!--<resource>-->
							<!--<targetPath>/</targetPath>-->
							<!--&lt;!&ndash;jar 包所在的路径  此处配置的 即对应 target 目录&ndash;&gt;-->
							<!--<directory>${project.build.directory}</directory>-->
							<!--&lt;!&ndash; 需要包含的 jar包 ，这里对应的是 Dockerfile中添加的文件名　&ndash;&gt;-->
							<!--<include>${project.build.finalName}.jar</include>-->
						<!--</resource>-->
					<!--</resources>-->
				<!--</configuration>-->
			<!--</plugin>-->
		<!--</plugins>-->
	<!--</build>-->
	<!--<build>-->
		<!--<plugins>-->
			<!--&lt;!&ndash; dockerfile plugin &ndash;&gt;-->
			<!--<plugin>-->
				<!--<groupId>com.spotify</groupId>-->
				<!--<artifactId>dockerfile-maven-plugin</artifactId>-->
				<!--<version>1.3.6</version>-->
				<!--<configuration>-->
					<!--&lt;!&ndash; 生成的镜像仓库名称 &ndash;&gt;-->
					<!--<repository>${docker.image.prefix}/${project.artifactId}</repository>-->
					<!--&lt;!&ndash; 生成的镜像版本 &ndash;&gt;-->
					<!--<tag>${project.version}</tag>-->
					<!--&lt;!&ndash; 推送到私有镜像仓库时需要开启安全认证 &ndash;&gt;-->
					<!--<useMavenSettingsForAuth>true</useMavenSettingsForAuth>-->
				<!--</configuration>-->
				<!--&lt;!&ndash; 直接使用mvn install命令打包项目，就会自动构建镜像和推送镜像 &ndash;&gt;-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>default</id>-->
						<!--<phase>install</phase>-->
						<!--<goals>-->
							<!--<goal>build</goal>-->
							<!--<goal>push</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
		<!--</plugins>-->
	<!--</build>-->
</project>
